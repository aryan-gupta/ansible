---

- name: load modules boot
  copy:
    dest: "/etc/modules-load.d/load-{{ item }}.conf"
    content: "{{ item }}"
  loop: "{{ modprobe_modules }}"

# @TODO BETTER WAY TO HANDLE SCRIPTS
- name: link game mode script
  ansible.builtin.file:
    src: "{{ scripts_repo_loc }}/nix/game_mode/restart_into_windows.sh"
    dest: "/usr/bin/restart_into_windows.sh"
    state: link
    force: true

- name: Creates firefox policies directory
  file:
    path: /etc/firefox/policies
    state: directory
    recurse: yes

- name: copy firefox policies file
  template:
    src: policies.json
    dest: /etc/firefox/policies
    mode: 644

- name: enable NetworkManager
  ansible.builtin.systemd:
    enabled: true
    name: NetworkManager.service

- name: enable ntpd
  ansible.builtin.systemd:
    enabled: true
    name: ntpd.service

- name: mask accessibility service
  ansible.builtin.systemd:
    enabled: false
    masked: true
    name: at-spi-dbus-bus.service
    scope: "global" # "user" # "system"
      #  ignore_errors: true

- name: enable fresh clamav
  ansible.builtin.systemd:
    enabled: true
    name: clamav-freshclam.service

- name: enable piavpn service
  ansible.builtin.systemd:
    enabled: true
    name: piavpn.service

- name: create pia username and password file
  template:
    src: pia_passwd.j2
    dest: /data/secure/pia_passwd
    mode: 777
  when: pia_username is defined

- name: login to PIA VPN
  ansible.builtin.command:
    cmd: "piactl login /data/secure/pia_passwd"
  ignore_errors: true

- name: enable openssh if default
  ansible.builtin.systemd:
    enabled: true
    name: sshd.service
  when: 'hostname in [ "default", "graviton" ]'

- name: enable parallel downloads pacman
  lineinfile:
    path: /etc/pacman.conf
    state: present
    regexp: '^#ParallelDownloads = 5'
    line: "ParallelDownloads = {{ pacman_parallel_downloads }}"

- name: enable color in pacman
  lineinfile:
    path: /etc/pacman.conf
    state: present
    regexp: '^#Color'
    line: "Color"

- name: enable openssh if default
  ansible.builtin.systemd:
    enabled: true
    name: bluetooth.service
  when: 'hostname in [ "boson" ]' # do not enable bluetooth on graviton yet @TODO
