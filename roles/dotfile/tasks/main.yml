---
# @TODO modularize this

- name: clone dotfiles
  ansible.builtin.git:
    clone: yes
    repo: "{{ dotfile_repo_github }}"
    dest: "{{ godfile_dir }}/{{ dotfile_repo }}"

- name: clone scripts
  ansible.builtin.git:
    clone: yes
    repo: "{{ scripts_repo_github }}"
    dest: "{{ godfile_dir }}/{{ scripts_repo }}"

- name: setup .gitconfig
  ansible.builtin.file:
    src: "{{ godfile_dir }}/{{ dotfile_repo }}/.gitconfig"
    dest: "{{ user.home_dir }}/.gitconfig"
    state: link

- name: setup .gitconfig-local
  ansible.builtin.file:
    src: "{{ godfile_dir }}/{{ dotfile_repo }}/.gitconfig-{{ hostname }}"
    dest: "{{ user.home_dir }}/.gitconfig-local"
    state: link
  ignore_errors: true # this is to handle that there is no .github-default file

- name: Check bashrc
  stat:
    path: "{{ user.home_dir }}/.bashrc"
  register: bashrc_file_type

- name: remove bashrc
  ansible.builtin.file:
    path: "{{ user.home_dir }}/.bashrc"
    state: absent
  when: bashrc_file_type.stat.islnk is defined and not bashrc_file_type.stat.islnk

- name: Check zshrc
  stat:
    path: "{{ user.home_dir }}/.zshrc"
  register: zshrc_file_type

- name: remove zshrc
  ansible.builtin.file:
    path: "{{ user.home_dir }}/.zshrc"
    state: absent
  when: zshrc_file_type.stat.islnk is defined and not zshrc_file_type.stat.islnk

- name: Check gtkrc2
  stat:
    path: "{{ user.home_dir }}/.gtkrc-2.0"
  register: gtkrc2_file_type

- name: remove gtkrc2
  ansible.builtin.file:
    path: "{{ user.home_dir }}/.gtkrc-2.0"
    state: absent
  when: gtkrc2_file_type.stat.islnk is defined and not gtkrc2_file_type.stat.islnk

- name: setup .cmd-shortcuts
  ansible.builtin.file:
    src: "{{ godfile_dir }}/{{ dotfile_repo }}/.cmd-shortcuts"
    dest: "{{ user.home_dir }}/.cmd-shortcuts"
    state: link
    force: true

- name: add bashrc
  ansible.builtin.file:
    src: "{{ godfile_dir }}/{{ dotfile_repo }}/.bashrc"
    dest: "{{ user.home_dir }}/.bashrc"
    state: link

- name: add zshrc
  ansible.builtin.file:
    src: "{{ godfile_dir }}/{{ dotfile_repo }}/.zshrc"
    dest: "{{ user.home_dir }}/.zshrc"
    state: link

- name: add gtkrc2
  ansible.builtin.file:
    src: "{{ godfile_dir }}/{{ dotfile_repo }}/.gtkrc-2.0"
    dest: "{{ user.home_dir }}/.gtkrc-2.0"
    state: link
    force: true

- name: setup .xinitrc
  ansible.builtin.file:
    src: "{{ godfile_dir }}/{{ dotfile_repo }}/.xinitrc"
    dest: "{{ user.home_dir }}/.xinitrc"
    state: link

- name: Check .config folder
  stat:
    path: "{{ user.home_dir }}/.config"
  register: config_folder_type

- name: remove old .config folder
  ansible.builtin.file:
    path: "{{ user.home_dir }}/.config"
    state: absent
  when: config_folder_type.stat.islnk is defined and not config_folder_type.stat.islnk

- name: Check .config folder
  stat:
    path: "{{ user.home_dir }}/.config"
  register: config_folder_type

- name: link .config folder
  ansible.builtin.file:
    src: "{{ godfile_dir }}/{{ dotfile_repo }}/.config"
    dest: "{{ user.home_dir }}/.config"
    state: link
  when: not config_folder_type.stat.exists

- name: finish setting up alacritty
  ansible.builtin.file:
    src: "{{ user.home_dir }}/.config/alacritty/alacritty-{{ hostname }}.yml"
    dest: "{{ user.home_dir }}/.config/alacritty/alacritty-local.yml"
    state: link
  ignore_errors: true # this is to handle that there is no alacritty-default file
