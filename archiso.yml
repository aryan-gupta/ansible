---

- hosts: '{{ hostname }}'
  name: bootstrap ArchLinux system
  become: yes
  connection: local
  tags: ['bootstrap']

  roles:
    - role: 'uefi'
    - role: 'wipe'
      tags: 'wipe'
      when: '(wipe is defined) and (wipe == true)'

    - role: 'part' # default and nocrypt and nolvm and !plain
      vars: { mode: 'disk'  }
      when: '(nocrypt == false) or (nolvm == false)'

    - role: 'part' # !default and !nocrypt and !nolvm and plain
      vars: { mode: 'plain' }
      when: '(nocrypt == true) and (nolvm == true)'

    - role: 'luks' # default and !nocrypt and nolvm and !plain
      when: 'nocrypt == false'

    - role: 'lvm' # default and nocrypt and !nolvm and !plain
      when: 'nolvm == false'

    - role: 'part' # !default and !nocrypt and nolvm and !plain
      vars: { mode: 'luks' }
      when: '(nocrypt == false) and (nolvm == true)'

    - role: 'fsmnt'
    - role: 'packages'
      vars: { modes: [ 'boot' ] }
    - role: 'blobs'

- hosts: chroot
  name: install Archlinux
  connection: chroot
  tags: ['install']

  roles:
    - role: 'locale'
    - role: 'hosts'
    - role: 'packages'
      vars: { modes: [ 'mir', 'syu', 'min', 'typ', 'aur' ] }
    - role: 'apps'
    - role: 'plymouth'
    - role: 'boot'
    - role: 'secureboot'
      when: 'secureboot == true'
    - role: 'accounts'
    - role: 'folders'
      vars: { mode: 'root' }

- hosts: chroot
  name: user setup
  become: true
  become_method: sudo
  connection: chroot
  become_user: "{{ user.name }}"
  tags: ['user']
  vars:
    ansible_become_pass: "{{ user_password }}"

  roles:
    - role: 'dotfile'
    - role: 'folders'
      vars: { mode: "{{ user.name }}" }
    - role: 'user'
